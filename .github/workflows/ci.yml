name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["24.2.0"]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run typecheck

      - name: Run tests
        run: npm test

      - name: Run build
        run: npm run build

      - name: Upload coverage reports (Node.js 22 only)
        if: matrix.node-version == 22
        run: npm run test:coverage

  # Optional: Add a job for testing with coverage reporting
  coverage:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24.2.0"
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Comment coverage report
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            
            try {
              // Try to read coverage summary (if it exists)
              if (fs.existsSync('coverage/coverage-summary.json')) {
                const coverage = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8'));
                const total = coverage.total;
                
                const coverageComment = `## ðŸ“Š Test Coverage Report
                
                | Metric | Percentage | Coverage |
                |--------|------------|----------|
                | Lines | ${total.lines.pct}% | ${total.lines.covered}/${total.lines.total} |
                | Functions | ${total.functions.pct}% | ${total.functions.covered}/${total.functions.total} |
                | Branches | ${total.branches.pct}% | ${total.branches.covered}/${total.branches.total} |
                | Statements | ${total.statements.pct}% | ${total.statements.covered}/${total.statements.total} |
                
                *Coverage report generated by CI*`;
                
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: coverageComment
                });
              }
            } catch (error) {
              console.log('Coverage report not available or malformed');
            }